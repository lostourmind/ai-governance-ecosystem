[SYNTHESIS_HANDOFF_CONTEXT]
session_id: "IT_OT_RESPONSE_SYNTHESIS_001"
source_tool: "Claude"
target_tool: "ChatGPT"
lifecycle_phase: "MULTI_PLATFORM_KNOWLEDGE_SYNTHESIS"
objective: "CREATE_UNIFIED_NODE_FROM_DISTRIBUTED_EXPERTISE"

[GOVERNANCE_ANCHOR_SYNTHESIS]
governance_received: "claude_handoff"
framework_constraints: "preservation_rules_acknowledged"
modification_authority: "create_only"
repository_access: "https://github.com/lostourmind/ai-governance-ecosystem"

FRAMEWORK_MODIFICATION_RESTRICTIONS:
  existing_files: PROHIBITED_FROM_MODIFICATION
  directory_structure: PROHIBITED_FROM_CHANGES
  framework_files: PROHIBITED_FROM_TOUCHING
  
  permitted_actions_only:
    - create_node_directory: "nodes/project.support.response_refinement/"
    - create_required_files: "knowledge_base.yaml, supplement_prompt.md, constraints.yaml, node.yaml"
    - synthesize_platform_contributions: "merge_distributed_expertise"

VALIDATION_REQUIREMENTS:
  governance_anchor: "Confirm framework preservation status in response"
  deliverables_summary: "List exactly what was created"
  synthesis_quality: "Document how platform contributions were integrated"
  compliance_confirmation: "Validate schema adherence and framework integrity"

MANDATORY_SCHEMA_COMPLIANCE:
  node_yaml_format: "MUST_FOLLOW_BREADCRUMB_STRUCTURE_EXACTLY"
  prohibited_custom_fields: "NO_SCHEMA_VERSION_VERSION_LIFECYCLE_PHASE_INPUTS_OUTPUTS"
  required_validation: "python3 validate_node_schema.py node.yaml"
  
schema_enforcement_checkpoint:
  before_creation: "Review breadcrumb structure requirements"
  during_creation: "Follow CoreXY node.yaml as exact template"
  after_creation: "Run validation script to confirm compliance"

KNOWLEDGE_INTEGRATION_REQUIREMENTS:
  merge_platform_expertise:
    - chatgpt_contribution: "[COMMUNICATION_TEMPLATES]"
    - copilot_contribution: "[MICROSOFT_INTEGRATION]"
    - gemini_contribution: "[VALIDATION_FRAMEWORKS]"
  resolve_conflicts: "Identify contradictions and provide unified approach"
  enhance_coverage: "Fill gaps not addressed by individual platforms"
  create_node_files: "Generate complete knowledge_base.yaml, supplement_prompt.md, constraints.yaml, node.yaml"

FINAL_NODE_CREATION:
  unified_expertise: "Best elements from all platform contributions"
  comprehensive_coverage: "Complete IT/OT response refinement capabilities"
  practical_implementation: "Ready-to-use templates and validation frameworks"
  framework_compliance: "All files follow template schemas exactly"
