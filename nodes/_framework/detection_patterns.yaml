# Scope Analysis and Node Detection Rules
detection_rules:
  keywords:
    klipper:
      patterns: ["klipper", "3d printer", "marlin", "firmware", "corexy", "delta"]
      nodes:
        - project.coding.klipper.corexy
        - project.coding.klipper.delta
        - project.coding.klipper.cartesian

    sql:
      patterns: ["sql", "database", "query", "domo", "analytics"]
      nodes:
        - project.coding.SQL.DOMO
        - project.coding.SQL.mysql
        - project.coding.SQL.postgresql

    web_development:
      patterns: ["react", "nextjs", "web app", "frontend"]
      nodes:
        - project.coding.web_development.react.nextjs
        - project.coding.web_development.vue
        - project.coding.web_development.angular

  context_analysis:
    scope_indicators:
      - pattern: "project involves (?P<domain>.+)"
        extraction: "domain_specific_node_path"
      - pattern: "working with (?P<technology>.+)"
        extraction: "technology_specific_node_path"
      - pattern: "need help with (?P<platform>.+)"
        extraction: "platform_specific_node_path"

  node_prioritization:
    most_specific_wins: true
    multiple_node_handling: "layer_supplements"
    fallback_behavior: "use_base_wrapper_only"

  validation_logic:
    node_exists: "check_node_directory_presence"
    knowledge_complete: "validate_required_files_present"
    supplement_available: "verify_supplement_prompt_readable"
