# ---- Factory supplement (only items not already present) ----
# Source: oldstock.cfg

[delayed_gcode heatsink]
initial_duration: 0 #if initial_duration is zero, the delayed gcode won't start by default
gcode:
    M106 S0
    UPDATE_DELAYED_GCODE ID=heatsink DURATION=0

[gcode_macro CLEAN_CALIBRATE_MOTOR]
description: clean calibrate motor data
gcode:
    M18
    #清除数据信号
    SET_PIN PIN=motor_cali_a VALUE=0
    #G4 P10
    SET_PIN PIN=motor_cali_b VALUE=0
    #G4 P10
    SET_PIN PIN=motor_cali_c VALUE=0
    G4 P290
    SET_PIN PIN=motor_cali_a VALUE=1
    #G4 P10
    SET_PIN PIN=motor_cali_b VALUE=1
    #G4 P10
    SET_PIN PIN=motor_cali_c VALUE=1
    G4 P290
    SET_PIN PIN=motor_cali_a VALUE=0
    #G4 P10
    SET_PIN PIN=motor_cali_b VALUE=0
    #G4 P10
    SET_PIN PIN=motor_cali_c VALUE=0
    G4 P290
    SET_PIN PIN=motor_cali_a VALUE=1
    #G4 P10
    SET_PIN PIN=motor_cali_b VALUE=1
    #G4 P10
    SET_PIN PIN=motor_cali_c VALUE=1
    G4 P290
    SET_PIN PIN=motor_cali_a VALUE=0
    #G4 P10
    SET_PIN PIN=motor_cali_b VALUE=0
    #G4 P10
    SET_PIN PIN=motor_cali_c VALUE=0
    G4 P290
    SET_PIN PIN=motor_cali_a VALUE=1
    #G4 P10
    SET_PIN PIN=motor_cali_b VALUE=1
    #G4 P10
    SET_PIN PIN=motor_cali_c VALUE=1
    G4 P290
    SET_PIN PIN=motor_cali_a VALUE=0
    #G4 P10
    SET_PIN PIN=motor_cali_b VALUE=0
    #G4 P10
    SET_PIN PIN=motor_cali_c VALUE=0

[gcode_macro CALIBRATE_MOTOR_DATA] #电机校准
description: calibrate motor
gcode: 
    M18
    M17
    M18
    #校准信号
    SET_PIN PIN=motor_cali_a VALUE=0
    #G4 P10
    SET_PIN PIN=motor_cali_b VALUE=0
    #G4 P10
    SET_PIN PIN=motor_cali_c VALUE=0
    G4 P200
    SET_PIN PIN=motor_cali_c VALUE=1
    #G4 P10
    SET_PIN PIN=motor_cali_a VALUE=1
    #G4 P10
    SET_PIN PIN=motor_cali_b VALUE=1
    G4 P200
    SET_PIN PIN=motor_cali_b VALUE=0
    #G4 P10
    SET_PIN PIN=motor_cali_c VALUE=0
    #G4 P10
    SET_PIN PIN=motor_cali_a VALUE=0
    G4 P200
    SET_PIN PIN=motor_cali_a VALUE=1
    #G4 P10
    SET_PIN PIN=motor_cali_b VALUE=1
    #G4 P10
    SET_PIN PIN=motor_cali_c VALUE=1
    G4 P200
    SET_PIN PIN=motor_cali_c VALUE=0
    #G4 P10
    SET_PIN PIN=motor_cali_a VALUE=0
    #G4 P10
    SET_PIN PIN=motor_cali_b VALUE=0
    G4 P200
    SET_PIN PIN=motor_cali_b VALUE=1
    #G4 P10
    SET_PIN PIN=motor_cali_c VALUE=1
    #G4 P10
    SET_PIN PIN=motor_cali_a VALUE=1
    G4 P200
    SET_PIN PIN=motor_cali_a VALUE=0
    #G4 P10
    SET_PIN PIN=motor_cali_b VALUE=0
    #G4 P10
    SET_PIN PIN=motor_cali_c VALUE=0
    G4 P200
    SET_PIN PIN=motor_cali_c VALUE=1
    #G4 P10
    SET_PIN PIN=motor_cali_a VALUE=1
    #G4 P10
    SET_PIN PIN=motor_cali_b VALUE=1
    G4 P200
    SET_PIN PIN=motor_cali_b VALUE=0
    #G4 P10
    SET_PIN PIN=motor_cali_c VALUE=0
    #G4 P10
    SET_PIN PIN=motor_cali_a VALUE=0
    G4 P200
    SET_PIN PIN=motor_cali_a VALUE=1
    #G4 P10
    SET_PIN PIN=motor_cali_b VALUE=1
    #G4 P10
    SET_PIN PIN=motor_cali_c VALUE=1
    G4 P200
    SET_PIN PIN=motor_cali_c VALUE=0
    #G4 P10
    SET_PIN PIN=motor_cali_a VALUE=0
    #G4 P10
    SET_PIN PIN=motor_cali_b VALUE=0
    M17
    G4 P30000 #校准时间
    
[gcode_macro CALIBRATE_MOTOR] #电机校准
description: calibrate motor
gcode: 
    G28
    G90
    G1 Z10 F6000
    CLEAN_CALIBRATE_MOTOR
    CALIBRATE_MOTOR_DATA
    M117 motor a is ok!
    M117 motor b is ok!
    M117 motor c is ok!
    G28
    M117 calibrate motor done!



[gcode_macro PID_BED]
description: Bed PID Calibration
gcode:
    {% set BED_TEMP=params.BED_TEMP|default(60)|float %}
    {% if printer.print_stats.state == "Printing" %}
      M117 This macro cannot be used while printing!
    {% else %}
      M117 BED PID CALIBRATION START!
      # SCREEN_LED_ON R=0 O=1 W=0
      SCREEN_LED_ON R=0 O=0 W=1 #20240814 Temporary change
      {% if printer.toolhead.homed_axes != "xyz" %}
        G28
      {% endif %}
      G90
      G1 Z50 F6000
      M400
      M106 S255
      M117 Start PID Calibration for inner bed...
      PID_CALIBRATE HEATER=heater_bed TARGET={BED_TEMP}
      M117 Start PID Calibration for outer bed...
      PID_CALIBRATE HEATER=HotBed1 TARGET={BED_TEMP}
      M107
      G28
      SCREEN_LED_ON R=0 O=0 W=1
      M117 Bed PID calibration finished
      M400
      SAVE_CONFIG
    {% endif %}

[gcode_macro MEASURING_RESONANCES] #检测共振
description: Measuring Resonances
gcode: 
    M117 MEASURING RESONANCES START !
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
    G28
    SHAPER_CALIBRATE
    G28
    F104 K=resonances_state V=True
    SAVE_CONFIG

[gcode_macro TIMELAPSE] #延时摄影
description: Timelapse
gcode: 
    M117 Timelapse done!


[gcode_macro PID_HOTEND]
description: Hotend PID Calibration
gcode:
    {% set HOTEND_TEMP=params.HOTEND_TEMP|default(240)|float %}
    {% if printer.print_stats.state == "Printing" %}
      M117 This macro cannot be used while printing!
    {% else %}
      M117 Hotend PID calibration in progress...
      # SCREEN_LED_ON R=0 O=1 W=0
      SCREEN_LED_ON R=0 O=0 W=1 #20240814 Temporary change
      {% if printer.toolhead.homed_axes != "xyz" %}
        G28
      {% endif %}
      G90
      G1 Z50 F6000
      M400
      M106 S255
      PID_CALIBRATE HEATER=extruder TARGET={HOTEND_TEMP}
      M107
      G28
      SCREEN_LED_ON R=0 O=0 W=1
      M117 Hotend PID calibration finished
      M400
      SAVE_CONFIG
    {% endif %}


[gcode_macro PRE_RESUME_INTERRUPTED]
gcode:
    {% set x_pos = printer.save_variables.variables.x_pos %}
    {% set y_pos = printer.save_variables.variables.y_pos %}
    {% set z_pos = printer.save_variables.variables.z_pos %}
    {% set fan_speed = printer.save_variables.variables.fan_speed %}
    {% set fan_max_power_factor = printer.save_variables.variables.fan_max_power_factor %}
    {% set nozzle_temp = printer.save_variables.variables.nozzle_temp %}
    {% set bed_temp = printer.save_variables.variables.bed_temp | float %}
    {% set hotbed1_temp = printer.save_variables.variables.hotbed1_temp | float %}
    {% set filament_used = printer.save_variables.variables.filament_used %}
    {% if bed_temp > 0.0 %}
      {% set bed_heat_need = 1 %}
    {% else %}
      {% set bed_temp = hotbed1_temp %}
      {% set bed_heat_need = 0 %}
    {% endif %}
    {% if hotbed1_temp > 0.0 %}
      {% set hotbed1_heat_need = 1 %}
    {% else %}
      {% set hotbed1_heat_need = 0 %}
    {% endif %}
    G28
    SAVE_VARIABLE VARIABLE=plr_flag VALUE=True
    M104 S{nozzle_temp} # set nozzle temperature
    M140 S{bed_temp} A{bed_heat_need} B{hotbed1_heat_need} # set bed temperature
    M109 S{nozzle_temp}
    M190 S{bed_temp} A{bed_heat_need} B{hotbed1_heat_need}
    {% set fan_speed = fan_speed / printer.fan.max_power * 255 %}
    M106 S{fan_speed} # enable fan
    F105 S{fan_max_power_factor}
    G90
    G1 X{x_pos} Y{y_pos} Z{z_pos} F3000
    SET_FILAMENT_USED S={filament_used}
    START_PRINT_RESUME


[gcode_macro RESTORE_E_CURRENT]
gcode:
    SET_TMC_CURRENT STEPPER=extruder CURRENT=1.2


[gcode_macro RESUME_INTERRUPTED]
gcode = 
    {% set file_position = printer.save_variables.variables.file_position %}
    {% set last_file = params.GCODE_FILE|default(printer.save_variables.variables.sd_filename)|string %}
    {% set print_duration = printer.save_variables.variables.print_duration %}
    {% if printer.save_variables.variables.absolute_extrude %}
      M82 # set extrude absolute
    {% else %}
      M83 # set extrude relative
    {% endif%}
    {% set e_pos = printer.save_variables.variables.e_pos %}
    G92 E{e_pos}
    POWER_LOSS_RESTART_PRINT FILENAME='{last_file}' FILEPOSITION={file_position} PRINT_DURATION={print_duration}


[gcode_macro SAVE_POWER_LOSS_PARAMS]
gcode:
    {% if printer["filament_switch_sensor power_loss"].enabled %}
      {% set file_position = printer.virtual_sdcard.file_position %} #save file position
      SAVE_VARIABLE VARIABLE=file_position VALUE={file_position}
      {% set absolute_extrude = printer.gcode_move.absolute_extrude %}
      SAVE_VARIABLE VARIABLE=absolute_extrude VALUE={absolute_extrude}
      {% set e_pos = printer.gcode_move.gcode_position.e %}
      SAVE_VARIABLE VARIABLE=e_pos VALUE={e_pos}
      {% set x_pos = printer.gcode_move.gcode_position.x %}
      SAVE_VARIABLE VARIABLE=x_pos VALUE={x_pos}
      {% set y_pos = printer.gcode_move.gcode_position.y %}
      SAVE_VARIABLE VARIABLE=y_pos VALUE={y_pos}
      {% set z_pos = printer.gcode_move.gcode_position.z %}
      SAVE_VARIABLE VARIABLE=z_pos VALUE={z_pos}
      {% set print_duration = printer.print_stats.print_duration %}
      SAVE_VARIABLE VARIABLE=print_duration VALUE={print_duration}
      {% set filament_used = printer.print_stats.filament_used %}
      SAVE_VARIABLE VARIABLE=filament_used VALUE={filament_used}
      {% set fan_speed = printer.fan.speed|float %}
      SAVE_VARIABLE VARIABLE=fan_speed VALUE={fan_speed}
      {% set fan_max_power_factor = printer.fan.max_power_factor|float %}
      SAVE_VARIABLE VARIABLE=fan_max_power_factor VALUE={fan_max_power_factor}
      {% set nozzle_temp = printer.extruder.target|float %}
      SAVE_VARIABLE VARIABLE=nozzle_temp VALUE={nozzle_temp}
      {% set bed_temp = printer.heater_bed.target|float %}
      SAVE_VARIABLE VARIABLE=bed_temp VALUE={bed_temp}
      {% set hotbed1_temp = printer["heater_generic HotBed1"].target|float %}
      SAVE_VARIABLE VARIABLE=hotbed1_temp VALUE={hotbed1_temp}
      SAVE_VARIABLE VARIABLE=was_interrupted VALUE=True
      F100
    {% endif %}


[gcode_macro screen_led_off]
gcode:
    SET_PIN PIN=LED_RED VALUE=0
    SET_PIN PIN=LED_ORANGE VALUE=0
    SET_PIN PIN=LED_WHITE VALUE=0

######################################################################
#function
######################################################################


[gcode_macro screen_led_on]
gcode:
    SET_PIN PIN=LED_RED VALUE={ params.R|default(1) }
    SET_PIN PIN=LED_ORANGE VALUE={ params.O|default(1) }
    SET_PIN PIN=LED_WHITE VALUE={ params.W|default(1) }


[gcode_macro SHUTDOWN]
gcode:
    {action_call_remote_method("shutdown_machine")}


[gcode_macro START_PRINT_RESUME]
gcode:
    {% set sd_filename = printer.virtual_sdcard.file_path|string %}
    SAVE_VARIABLE VARIABLE=sd_filename VALUE='"{sd_filename}"'
    SAVE_VARIABLE VARIABLE=was_interrupted VALUE=False
    {% set file_position = printer.save_variables.variables.file_position %}
    SAVE_VARIABLE VARIABLE=file_position VALUE='{file_position}'
    {% set x_pos = printer.save_variables.variables.x_pos %}
    SAVE_VARIABLE VARIABLE=x_pos VALUE={x_pos}
    {% set y_pos = printer.save_variables.variables.y_pos %}
    SAVE_VARIABLE VARIABLE=y_pos VALUE={y_pos}
    {% set z_pos = printer.save_variables.variables.z_pos %}
    SAVE_VARIABLE VARIABLE=z_pos VALUE={z_pos}
    {% set e_pos = printer.save_variables.variables.e_pos %}
    SAVE_VARIABLE VARIABLE=e_pos VALUE={e_pos}
    {% set print_duration = printer.save_variables.variables.print_duration %}
    SAVE_VARIABLE VARIABLE=print_duration VALUE={print_duration}
    {% set filament_used = printer.save_variables.variables.filament_used %}
    SAVE_VARIABLE VARIABLE=filament_used VALUE={filament_used}
    {% set absolute_extrude = printer.save_variables.variables.absolute_extrude %}
    SAVE_VARIABLE VARIABLE=absolute_extrude VALUE={absolute_extrude}
    SET_GCODE_VARIABLE MACRO=PAUSE_AFTER_D VARIABLE=start VALUE=0
    CLEAR_PAUSE
    M105 S1
    screen_led_on R=0 O=0 W=1
    M114 F0


########################################
# Drying Box – Auto (heater + manual fan)
########################################
# --- Dryer fake sensor bootstrap ---

[gcode_macro DRYER_FAKE_TEMP_STATUS]
description: "Report dryer temp file contents"
gcode:
  RESPOND MSG="Dryer therm reading = {printer['temperature_sensor dryer_therm'].temperature|int}°C"


[gcode_macro DRYER_ON]
gcode:
  SET_PIN PIN=drying_box_heater VALUE=1.0
  SET_FAN_SPEED FAN=drying_box_fan SPEED=1.0
  RESPOND MSG="Dryer ON"

[gcode_macro DRYER_OFF]
gcode:
  SET_PIN PIN=drying_box_heater VALUE=0
  SET_FAN_SPEED FAN=drying_box_fan SPEED=0
  RESPOND MSG="Dryer OFF"

[gcode_macro DRYER_STATUS]
gcode:
    {% set t = printer["heater_generic drying_box"].temperature|default(0)|int %}
    {% set target = printer["heater_generic drying_box"].target|default(0)|int %}
    RESPOND MSG="Dryer temp={t}C target={target}C"

# --- Factory-named wrappers (Option C) mapped to heater control ---
[gcode_macro drying_box_1]
description: "Factory: turn dryer ON (heater target=45C)"
gcode:
  SET_HEATER_TEMPERATURE HEATER="heater_generic drying_box" TARGET=45
  RESPOND MSG="Drying box: ON (target=45C)"

[gcode_macro drying_box_off]
description: "Factory: turn dryer OFF (heater target=0C)"
gcode:
  SET_HEATER_TEMPERATURE HEATER="heater_generic drying_box" TARGET=0
  RESPOND MSG="Drying box: OFF"

########################################
# GOV Dryer Policy Mixin
########################################

[gcode_macro GOV_DRYER_POLICY_ENABLE]
description: "Enable periodic dryer cycling (defaults: INTERVAL=60min, RUN=30min, TARGET=45C, FAN_FOLLOW=1)"
gcode:
  {% set interval = params.INTERVAL|default(60)|int %}
  {% set run      = params.RUN|default(30)|int %}
  {% set target   = params.TARGET|default(45)|int %}
  {% set fanf     = params.FAN_FOLLOW|default(1)|int %}
  SET_GCODE_VARIABLE MACRO=GOV_DRYER_POLICY VARIABLE=interval VALUE={interval}
  SET_GCODE_VARIABLE MACRO=GOV_DRYER_POLICY VARIABLE=run VALUE={run}
  SET_GCODE_VARIABLE MACRO=GOV_DRYER_POLICY VARIABLE=target VALUE={target}
  SET_GCODE_VARIABLE MACRO=GOV_DRYER_POLICY VARIABLE=fan_follow VALUE={fanf}
  SET_GCODE_VARIABLE MACRO=GOV_DRYER_POLICY VARIABLE=active VALUE=1
  RESPOND MSG="GOV: Dryer policy enabled interval={interval} run={run} target={target} fan_follow={fanf}"
  UPDATE_DELAYED_GCODE ID=GOV_DRYER_POLICY_TICK DURATION=10

[gcode_macro GOV_DRYER_POLICY_DISABLE]
description: "Disable periodic dryer cycling"
gcode:
  SET_GCODE_VARIABLE MACRO=GOV_DRYER_POLICY VARIABLE=active VALUE=0
  RESPOND MSG="GOV: Dryer policy disabled"
  UPDATE_DELAYED_GCODE ID=GOV_DRYER_POLICY_TICK DURATION=0
  SET_HEATER_TEMPERATURE HEATER="heater_generic drying_box" TARGET=0
  SET_FAN_SPEED FAN=drying_box_fan SPEED=0

[gcode_macro GOV_DRYER_POLICY]
variable_interval: 60
variable_run: 30
variable_target: 45
variable_fan_follow: 1
variable_active: 0
variable_timer: 0
gcode:
  RESPOND MSG="GOV: Dryer policy state active={active} interval={interval} run={run} target={target} fan_follow={fan_follow} timer={timer}"

[delayed_gcode GOV_DRYER_POLICY_TICK]
gcode:
  {% set active = printer["gcode_macro GOV_DRYER_POLICY"].active|int %}
  {% if active %}
    {% set interval = printer["gcode_macro GOV_DRYER_POLICY"].interval|int %}
    {% set run      = printer["gcode_macro GOV_DRYER_POLICY"].run|int %}
    {% set target   = printer["gcode_macro GOV_DRYER_POLICY"].target|int %}
    {% set fanf     = printer["gcode_macro GOV_DRYER_POLICY"].fan_follow|int %}
    {% set timer    = printer["gcode_macro GOV_DRYER_POLICY"].timer|int + 1 %}
    SET_GCODE_VARIABLE MACRO=GOV_DRYER_POLICY VARIABLE=timer VALUE={timer}

    {% if (timer % interval) == 0 %}
      SET_HEATER_TEMPERATURE HEATER="heater_generic drying_box" TARGET={target}
      SET_FAN_SPEED FAN=drying_box_fan SPEED=1.0
      RESPOND MSG="GOV: Dryer cycle START target={target}C"
      UPDATE_DELAYED_GCODE ID=GOV_DRYER_POLICY_STOP DURATION={run * 60}
    {% endif %}

    {% if fanf and printer["heater_generic drying_box"].target|int > 0 %}
      SET_FAN_SPEED FAN=drying_box_fan SPEED=1.0
    {% endif %}

    UPDATE_DELAYED_GCODE ID=GOV_DRYER_POLICY_TICK DURATION=60
  {% endif %}

[delayed_gcode GOV_DRYER_POLICY_STOP]
gcode:
  {% set active = printer["gcode_macro GOV_DRYER_POLICY"].active|int %}
  {% if active %}
    SET_HEATER_TEMPERATURE HEATER="heater_generic drying_box" TARGET=0
    SET_FAN_SPEED FAN=drying_box_fan SPEED=0
    RESPOND MSG="GOV: Dryer cycle END"
  {% endif %}


 # --- HARD MUTE: vendor filament loops (stops RUNNING spam) ---
[delayed_gcode LOAD_UNLOAD_FILAMENT_LOOP]
gcode:
  UPDATE_DELAYED_GCODE ID=LOAD_UNLOAD_FILAMENT_LOOP DURATION=0

[delayed_gcode LOAD_UNLOAD_FILAMENT]
gcode:
  UPDATE_DELAYED_GCODE ID=LOAD_UNLOAD_FILAMENT DURATION=0

[delayed_gcode FILAMENT_UI_LOOP]
gcode:
  UPDATE_DELAYED_GCODE ID=FILAMENT_UI_LOOP DURATION=0

[delayed_gcode FILAMENT_LOAD_UNLOAD_LOOP]
gcode:
  UPDATE_DELAYED_GCODE ID=FILAMENT_LOAD_UNLOAD_LOOP DURATION=0

[delayed_gcode FLSUN_FILAMENT_UI_LOOP]
gcode:
  UPDATE_DELAYED_GCODE ID=FLSUN_FILAMENT_UI_LOOP DURATION=0

[delayed_gcode GOV_FUI_LOOP]
gcode:
  UPDATE_DELAYED_GCODE ID=GOV_FUI_LOOP DURATION=0

